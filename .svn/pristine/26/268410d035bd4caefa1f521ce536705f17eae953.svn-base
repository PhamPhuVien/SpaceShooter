//// Vars.
var mongoose = require('mongoose');
var bodyParser = require('body-parser');
var express = require('express');
var app = express();
var server = require('http').Server(app);
var http = require('http');
var io = require('socket.io').listen(server);
var routes = require('./routes/routes');
var routesSecure = require('./routes/routesSecure');

//// Socket IO.
io.on('connection', function(socket){
    console.log('A User Connected');

    socket.on('disconnect', function(){
        console.log('User Disconnected');
    });

    socket.on('SubmitScore', function(data){
        console.log('SubmitScore Data: ' + data);

        const req = http.request(
            {
              host: 'localhost',
              port: '5000',
              path: '/submitScore',
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              }
            },
            response => {
              console.log(response.statusCode);
            }
        );

        req.write(data);

        //console.log('SubmiteScore Data 2: ' + JSON.stringify({email: 'test3@test.com', score: 120}));

        //req.write('{"email":"test3@test.com","score":140}');
           
        // req.write(JSON.stringify({
        //     email: 'test3@test.com',
        //     score: 120
        // }));
           
        req.end();
    });
});

//// Mongo. Create Mongo Connection.
const uri = 'mongodb+srv://admin:admin@cluster0-z6bg3.mongodb.net/test?retryWrites=true';

mongoose.connect(uri, {useNewUrlParser: true, useCreateIndex: true});

mongoose.connection.on('error', (error) => {
    console.log('Connect Mongo ERROR: ' + error);
    process.exit(1);
});

mongoose.connection.on('connected', function(){
    console.log('Connected To Mongo.');
});

//// App. Parse The Body Of Incomming Requests.
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(express.static(__dirname + '/../public'));      // Work With Static Such As Image, CSS, JS.
app.use('/', routes);
app.use('/', routesSecure);

//// Server Listen.
server.listen(5000, function () {
    console.log('\nServer Is Listening On Port: ' + server.address().port);
    console.log('=================================');
});